{"version":3,"sources":["webpack:///./_src/modules/global/footer/footer.ts","webpack:///./_src/js/core/module.ts"],"names":["Footer","el","opts","arguments","length","undefined","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","_module2","default","_bootstrap","__webpack_require__","Module","dom","options","_utils","getInstanceOfjQuery","ReferenceError","assign","getCachableDomElements","init","render","bindEventListeners"],"mappings":"ocAIAA,cAEI,SAAAA,EAAYC,GAAsC,IAAjBC,EAAiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,yGAAAG,CAAAC,KAAAP,oKAAAQ,CAAAD,MAAAP,EAAAS,WAAAC,OAAAC,eAAAX,IAAAY,KAAAL,KAExCN,EAAIC,uUAJGW,EAAAC,+IAuBNd,iGCvBfe,EAAAC,EAAA,eAiBI,SAAAC,EAAsBhB,GAAsC,IAAjBC,EAAiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAIxD,+FAJwDG,CAAAC,KAAAU,GAVpDV,KAAAW,OACAX,KAAAY,WAWJZ,KAAKN,IAAK,EAAAmB,EAAAC,qBAAoBpB,QAEP,IAAZM,KAAKN,KAAuBM,KAAKN,GAAGG,OAE3C,MAAM,IAAIkB,eAAe,sEAG7BZ,OAAOa,OAAOhB,KAAKW,KAAK,EAAAH,EAAAS,wBAAuBjB,KAAKN,KACpDS,OAAOa,OAAOhB,KAAKY,QAASjB,GAE5BK,KAAKkB,OACLlB,KAAKmB,SACLnB,KAAKoB","file":"2.js","sourcesContent":["\n// @ts-ignore\nimport Module from 'core/module';\n\nclass Footer extends Module\n{\n    constructor(el: string | JQuery, opts: object = {})\n    {\n        super(el, opts);\n    }\n\n    init()\n    {\n\n    }\n\n    render()\n    {\n\n    }\n\n    bindEventListeners()\n    {\n\n    }\n}\n\nexport default Footer;\n","\n// @ts-ignore\nimport { getInstanceOfjQuery } from 'helpers/utils';\n// @ts-ignore\nimport { getCachableDomElements } from 'core/bootstrap';\n\n/**\n * Abstract Module class in which all modules inherit from\n */\nabstract class Module\n{\n    private dom: object = {};\n    private options: object = {};\n    private el: JQuery;\n\n   /**\n     * Module constructor\n     *\n     * @param {string|JQuery} el Main DOM element in any valid jQuery form i.e. `#foo` or `.bar` or `[data-baz]` or an actual jQuery object.\n     * @param {Object} [opts={}] Module options.\n    */\n    protected constructor(el: string | JQuery, opts: object = {})\n    {\n        this.el = getInstanceOfjQuery(el);\n\n        if (typeof this.el === 'undefined' || !this.el.length)\n        {\n            throw new ReferenceError('You must provide an valid element as a string type or jquery type.');\n        }\n\n        Object.assign(this.dom, getCachableDomElements(this.el));\n        Object.assign(this.options, opts);\n\n        this.init();\n        this.render();\n        this.bindEventListeners();\n    }\n\n    abstract init() : void;\n\n    abstract render() : void;\n\n    abstract bindEventListeners() : void;\n}\n\nexport default Module;\n"],"sourceRoot":""}